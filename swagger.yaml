swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/account/{id}:
    get:
      security:
        - Bearer: []
      tags:
       - User Account Module
      summary: User Account API
      description: API for fetching a user account
      parameters:
        - in: path
          name: id
          description: Account Payload
          required: true
          type: string
          schema:
            $ref: '#/definitions/Account'
      responses:
        '200':
          description: User account retrivied successfully
          schema:
            $ref: '#/definitions/AccountResponse'
        '400':
          description: Invalid Fields
        '403':
          description: None Authorized
        '500':
          description: Internal Server Error
  /user/account/{id}/transactions/{month}-{year}:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User Transaction API
      description: API for fetching a user transactions for one month
      parameters:
        - in: path
          name: id
          description: Transactions Payload
          required: true
          type: string
          schema:
            $ref: '#/definitions/Transactions'
      responses:
        '200':
          description: User transactions retrivied successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '400':
          description: Invalid Fields
        '403':
          description: None Authorized
        '500':
          description: Internal Server Error
  /user/account/{accountId}/transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Category Module
      summary: User Category API
      description: API for fetching a new catergoy
      parameters:
        - in: path
          name: accountId
          description: Catergoy Payload
          required: true
          type: string
          schema:
            $ref: '#/definitions/Category'
      responses:
        '200':
          description: Account category's changed successfully
          schema:
            $ref: '#/definitions/CategoryResponse'
        '400':
          description: Invalid Fields
        '403':
          description: None Authorized
        '500':
          description: Internal Server Error
  /user/account/{id}/transaction/{id}/Note:
    put:
      security:
        - Bearer: []
      tags:
        - User Note Module
      summary: User Note API
      description: API for fetching a new note
      parameters:
        - in: body
          name: body
          description: Note Payload
          required: true
          type: string
          schema:
            $ref: '#/definitions/Note'
      responses:
        '200':
          description: Account note's changed successfully
          schema:
            $ref: '#/definitions/NoteResponse'
        '400':
          description: Invalid Fields
        '403':
          description: None Authorized
        '500':
          description: Internal Server Error
  /user/account/{accountId}/transaction/{transactionId}/note:
    post:
      security:
        - Bearer: []
      tags:
        - User Note Module
      summary: Add a Note to a Transaction
      description: API for adding a new note to a specific transaction
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: The ID of the account
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction
        - in: body
          name: body
          description: Note payload
          required: true
          schema:
            $ref: '#/definitions/Note'
      responses:
        '201':
          description: Note added successfully
          schema:
            $ref: '#/definitions/NoteResponse'
        '400':
          description: Invalid fields
        '403':
          description: Not Authorized
        '500':
          description: Internal Server Error
  /user/account/{accountId}/transaction/{transactionId}/note:
    delete:
      security:
        - Bearer: []
      tags:
        - User Note Module
      summary: Delete a Note from a Transaction
      description: API for deleting a note from a specific transaction
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: The ID of the account
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction
      responses:
        '200':
          description: Note deleted successfully
        '400':
          description: Invalid request
        '403':
          description: Not Authorized
        '404':
          description: Note not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Account:
    type: object
    properties:
      accountId:
        type: string
      balance:
        type: number
      type:
        type: string
      createAt:
        type: string
        format: date-time
  AccountResponse:
    type: object
    properties:
      type: integer
      message:
        type: string
      data:
        $ref: 'definitions/Account'
  Transactions:
    type: object
    properties:
      transactionId:
        type: string
      amount:
        type: number
      description:
        type: string
      date:
        type: string
        format: date-time
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Transactions'
  Category:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  CategoryResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      data:
        $ref: '#/definitions/Category'
  Note:
    type: object
    properties:
      noteId:
        type: string
      content:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  NoteResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      data:
        $ref: '#/definitions/Note'
